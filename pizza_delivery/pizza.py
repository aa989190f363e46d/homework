#!/usr/bin/env python

"""
–ó–∞–¥–∞—á–µ –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É –ø–∏—Ü—ã.

–í. –ü—É–ø–∫–∏–Ω —Ä–∞–∑–≤–æ–∑–∏—Ç –ø–∏—Ü—Ü—É. –ï–º—É —Å–æ–æ–±—â–∞—é—Ç –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–≤–∫–∏ –≤ –≤–∏–¥–µ <—É–ª–∏—Ü–∞> <–Ω–æ–º–µ—Ä
–¥–æ–º–∞>-<–Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã>

–ü—Ä–∏–µ–∑–∂–∞—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É, –í–∞—Å—è –≤–∏–¥–∏—Ç f-—ç—Ç–∞–∂–Ω–æ–µ –∑–¥–∞–Ω–∏–µ. –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –±—É–¥–µ–º
—Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ –≤ –ø–æ–¥—ä–µ–∑–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è 4 –∫–≤–∞—Ä—Ç–∏—Ä—ã.

–ü–æ–º–æ–≥–∏—Ç–µ –í–∞—Å–µ –ø–æ—Å—á–∏—Ç–∞—Ç—å, –≤ –∫–∞–∫–æ–º –ø–æ–¥—ä–µ–∑–¥–µ –∏ –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω—É–∂–Ω–∞—è
–∫–≤–∞—Ä—Ç–∏—Ä–∞ n.

–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–æ–¥—É–ª—é % –∏–ª–∏ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ
–¥–µ–ª–µ–Ω–∏–µ //.
"""

FLATS_PER_FLOOR = 4


def check_buildig_height(building_height):
    if building_height <= 0:
        raise ValueError(
            f"Negative or zero height ({building_height}) is invalid"
            )


def check_flat_num(flat_num):
    if flat_num <= 0:
        raise ValueError(
            f"Negative or zero apartaments number ({flat_num}) is invalid"
            )


def flats_per_entrance(building_height):
    return FLATS_PER_FLOOR * building_height


def find_entrance(building_height, flat_num):
    """
    building_height - —á–∏—Å–ª–æ —ç—Ç–∞–∂–µ–π –≤ –¥–æ–º–µ
    flat_num        - –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã
    """
    check_buildig_height(building_height)
    check_flat_num(flat_num)
    fpe_ = flats_per_entrance(building_height)
    entrances_before, flat_num_in_ent = divmod(flat_num, fpe_)
    return entrances_before + (1 if flat_num_in_ent else 0)


def find_floor(building_height, flat_num):
    """
    building_height - —á–∏—Å–ª–æ —ç—Ç–∞–∂–µ–π –≤ –¥–æ–º–µ
    flat_num        - –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã
    """
    check_buildig_height(building_height)
    check_flat_num(flat_num)
    fpe_ = flats_per_entrance(building_height)
    flat_num_in_ent = flat_num % fpe_
    if flat_num_in_ent == 0:
        return building_height
    floors_before, flat_num_at_floor = divmod(flat_num_in_ent, FLATS_PER_FLOOR)
    return floors_before + (1 if flat_num_at_floor else 0)


if __name__ == "__main__":
    import sys

    inp_floors = input("–ß–∏—Å–ª–æ —ç—Ç–∞–∂–µ–π: ")
    try:
        floors = int(inp_floors)
    except ValueError as e:
        print(f"Invalid input floors={inp_floors}", e, sep="\n")
        sys.exit(1)

    inp_flat_num = input("–ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã: ")
    try:
        flat_num = int(inp_flat_num)
    except ValueError as e:
        print(f"Invalid input flat_num={inp_flat_num}", e, sep="\n")
        sys.exit(1)

    try:
        entrance = find_entrance(floors, flat_num)
    except ValueError as e:
        print(e)
        sys.exit(1)

    ent_floor = find_floor(floors, flat_num)

    print("\nü§ñ: –í–∞—Å–∏–ª–∏–π, –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø—Ä–æ—Å–ª–µ–¥—É–π—Ç–µ",
          f"–∫ –ø–æ–¥—ä–µ–∑–¥—É\t‚Ññ{entrance:>4}",
          f"–Ω–∞ —ç—Ç–∞–∂\t\t‚Ññ{ent_floor:>4}",
          sep='\n')
